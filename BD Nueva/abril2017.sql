-- MySQL Script generated by MySQL Workbench
-- Sun Apr 23 20:16:29 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema pct3
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `pct3` ;

-- -----------------------------------------------------
-- Schema pct3
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pct3` DEFAULT CHARACTER SET utf8 ;
USE `pct3` ;

-- -----------------------------------------------------
-- Table `pct3`.`cabina`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`cabina` ;

CREATE TABLE IF NOT EXISTS `pct3`.`cabina` (
  `cabina_id` SMALLINT(6) NOT NULL AUTO_INCREMENT,
  `descripcion_cabina` VARCHAR(30) NOT NULL,
  `estado_cabina` VARCHAR(45) NOT NULL,
  `precio` FLOAT NOT NULL,
  `tipo_cabina` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cabina_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8
COMMENT = 'Almacena el nombre de la cabina y actualizar√° el estado de ocupado a vacio.';

CREATE UNIQUE INDEX `descripcion_cabina_UNIQUE` ON `pct3`.`cabina` (`descripcion_cabina` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`tipo_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`tipo_persona` ;

CREATE TABLE IF NOT EXISTS `pct3`.`tipo_persona` (
  `idtipo_persona` INT(11) NOT NULL AUTO_INCREMENT,
  `desc_persona` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipo_persona`))
ENGINE = InnoDB
AUTO_INCREMENT = 15
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `pct3`.`persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`persona` ;

CREATE TABLE IF NOT EXISTS `pct3`.`persona` (
  `idpersona` INT(11) NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `cedula` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(45) NOT NULL,
  `direccion` VARCHAR(45) NOT NULL,
  `tipo_persona_idtipo_persona` INT(11) NOT NULL,
  PRIMARY KEY (`idpersona`),
  CONSTRAINT `fk_persona_tipo_persona1`
    FOREIGN KEY (`tipo_persona_idtipo_persona`)
    REFERENCES `pct3`.`tipo_persona` (`idtipo_persona`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 30
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `cedula_UNIQUE` ON `pct3`.`persona` (`cedula` ASC);

CREATE INDEX `fk_persona_tipo_persona1_idx` ON `pct3`.`persona` (`tipo_persona_idtipo_persona` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`cliente_empresa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`cliente_empresa` ;

CREATE TABLE IF NOT EXISTS `pct3`.`cliente_empresa` (
  `empresa_id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `codigo_cliente` VARCHAR(45) NOT NULL,
  `estado_cliente` TINYINT(1) NOT NULL,
  `persona_idpersona` INT(11) NOT NULL,
  PRIMARY KEY (`empresa_id`),
  CONSTRAINT `fk_cliente_empresa_persona1`
    FOREIGN KEY (`persona_idpersona`)
    REFERENCES `pct3`.`persona` (`idpersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `cliente_empresa_FK_idx` ON `pct3`.`cliente_empresa` (`persona_idpersona` ASC);

CREATE INDEX `persona_idpersona` ON `pct3`.`cliente_empresa` (`persona_idpersona` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`horario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`horario` ;

CREATE TABLE IF NOT EXISTS `pct3`.`horario` (
  `horario_id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `descripcion_horario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`horario_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `descripcion_horario` ON `pct3`.`horario` (`descripcion_horario` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`puesto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`puesto` ;

CREATE TABLE IF NOT EXISTS `pct3`.`puesto` (
  `puesto_id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `descripcion_puesto` VARCHAR(45) NOT NULL,
  `pago_hora_sencilla` FLOAT NOT NULL,
  `pago_hora_extra` FLOAT NOT NULL,
  PRIMARY KEY (`puesto_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `descripcion_puesto_UNIQUE` ON `pct3`.`puesto` (`descripcion_puesto` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`colaborador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`colaborador` ;

CREATE TABLE IF NOT EXISTS `pct3`.`colaborador` (
  `empleado_id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `fecha_contrato` DATE NOT NULL,
  `fecha_despido` DATE NULL DEFAULT NULL,
  `observaciones` VARCHAR(45) NULL DEFAULT NULL,
  `persona_idpersona` INT(11) NOT NULL,
  `puesto_puesto_id` BIGINT(20) UNSIGNED NOT NULL,
  `horario_horario_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`empleado_id`, `persona_idpersona`),
  CONSTRAINT `fk_colaborador_horario`
    FOREIGN KEY (`horario_horario_id`)
    REFERENCES `pct3`.`horario` (`horario_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_colaborador_persona`
    FOREIGN KEY (`persona_idpersona`)
    REFERENCES `pct3`.`persona` (`idpersona`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_colaborador_puesto1`
    FOREIGN KEY (`puesto_puesto_id`)
    REFERENCES `pct3`.`puesto` (`puesto_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 8
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_colaborador_persona_idx` ON `pct3`.`colaborador` (`persona_idpersona` ASC);

CREATE INDEX `fk_colaborador_puesto1_idx` ON `pct3`.`colaborador` (`puesto_puesto_id` ASC);

CREATE INDEX `fk_colaborador_horario_idx` ON `pct3`.`colaborador` (`horario_horario_id` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`factura_cabina`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`factura_cabina` ;

CREATE TABLE IF NOT EXISTS `pct3`.`factura_cabina` (
  `factura_id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `cant_dia` TINYINT(4) NOT NULL,
  `fecha` DATE NOT NULL,
  `impuesto_cabina` FLOAT NOT NULL,
  `precio_total_cabina` BIGINT(20) NOT NULL,
  `cabina_cabina_id` SMALLINT(6) NOT NULL,
  `colaborador_empleado_id` BIGINT(20) NOT NULL,
  `numero_factura` BIGINT(20) NOT NULL,
  `cliente_empresa_empresa_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`factura_id`),
  CONSTRAINT `fk_factura_cabina_cabina1`
    FOREIGN KEY (`cabina_cabina_id`)
    REFERENCES `pct3`.`cabina` (`cabina_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_factura_cabina_cliente_empresa1`
    FOREIGN KEY (`cliente_empresa_empresa_id`)
    REFERENCES `pct3`.`cliente_empresa` (`empresa_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_factura_cabina_colaborador1`
    FOREIGN KEY (`colaborador_empleado_id`)
    REFERENCES `pct3`.`colaborador` (`empleado_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 14
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_factura_cabina_cabina1_idx` ON `pct3`.`factura_cabina` (`cabina_cabina_id` ASC);

CREATE INDEX `fk_factura_cabina_colaborador1_idx` ON `pct3`.`factura_cabina` (`colaborador_empleado_id` ASC);

CREATE INDEX `fk_factura_cabina_cliente_empresa1_idx` ON `pct3`.`factura_cabina` (`cliente_empresa_empresa_id` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`gasto_operativo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`gasto_operativo` ;

CREATE TABLE IF NOT EXISTS `pct3`.`gasto_operativo` (
  `gasto_id` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `tipo_gasto` VARCHAR(50) NOT NULL DEFAULT 'planilla o gasto operativo',
  `monto_gasto` MEDIUMINT(9) NOT NULL,
  `fecha_gasto` DATE NOT NULL,
  `factura_gasto` VARCHAR(45) NOT NULL,
  `colaborador_empleado_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`gasto_id`),
  CONSTRAINT `fk_gasto_operativo_colaborador1`
    FOREIGN KEY (`colaborador_empleado_id`)
    REFERENCES `pct3`.`colaborador` (`empleado_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 50
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_gasto_operativo_colaborador1_idx` ON `pct3`.`gasto_operativo` (`colaborador_empleado_id` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`proveedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`proveedor` ;

CREATE TABLE IF NOT EXISTS `pct3`.`proveedor` (
  `idproveedor` INT(11) NOT NULL AUTO_INCREMENT,
  `desc_proveedor` VARCHAR(45) NULL DEFAULT NULL,
  `persona_idpersona` INT(11) NOT NULL,
  PRIMARY KEY (`idproveedor`),
  CONSTRAINT `fk_proveedor_persona1`
    FOREIGN KEY (`persona_idpersona`)
    REFERENCES `pct3`.`persona` (`idpersona`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_proveedor_persona1_idx` ON `pct3`.`proveedor` (`persona_idpersona` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`productos` ;

CREATE TABLE IF NOT EXISTS `pct3`.`productos` (
  `idproductos` BIGINT(20) NOT NULL AUTO_INCREMENT,
  `nombre_producto` VARCHAR(45) NOT NULL,
  `proveedor_idproveedor` INT(11) NOT NULL,
  `cant` INT NOT NULL,
  `gasto_operativo_gasto_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`idproductos`),
  CONSTRAINT `fk_productos_proveedor1`
    FOREIGN KEY (`proveedor_idproveedor`)
    REFERENCES `pct3`.`proveedor` (`idproveedor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_productos_gasto_operativo1`
    FOREIGN KEY (`gasto_operativo_gasto_id`)
    REFERENCES `pct3`.`gasto_operativo` (`gasto_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_productos_proveedor1_idx` ON `pct3`.`productos` (`proveedor_idproveedor` ASC);

CREATE INDEX `fk_productos_gasto_operativo1_idx` ON `pct3`.`productos` (`gasto_operativo_gasto_id` ASC);


-- -----------------------------------------------------
-- Table `pct3`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pct3`.`usuario` ;

CREATE TABLE IF NOT EXISTS `pct3`.`usuario` (
  `idusuario` INT(11) NOT NULL AUTO_INCREMENT,
  `usuario` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,
  `password` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL,
  `colaborador_empleado_id` BIGINT(20) NOT NULL,
  PRIMARY KEY (`idusuario`),
  CONSTRAINT `fk_usuario_colaborador1`
    FOREIGN KEY (`colaborador_empleado_id`)
    REFERENCES `pct3`.`colaborador` (`empleado_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 6
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin
ROW_FORMAT = COMPACT;

CREATE INDEX `fk_usuario_colaborador1_idx` ON `pct3`.`usuario` (`colaborador_empleado_id` ASC);

USE `pct3` ;

-- -----------------------------------------------------
-- procedure Busqueda_Cliente_Empresa
-- -----------------------------------------------------

USE `pct3`;
DROP procedure IF EXISTS `pct3`.`Busqueda_Cliente_Empresa`;

DELIMITER $$
USE `pct3`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Busqueda_Cliente_Empresa`(in `nombreCliente` varchar(45))
BEGIN
SELECT 
    cliente_empresa.codigo_cliente, persona.nombre
FROM
    cliente_empresa
        INNER JOIN
    persona ON cliente_empresa.persona_idpersona = persona.idpersona
WHERE
    persona.nombre = `nombreCliente`;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure Factura_Fecha_Empresa
-- -----------------------------------------------------

USE `pct3`;
DROP procedure IF EXISTS `pct3`.`Factura_Fecha_Empresa`;

DELIMITER $$
USE `pct3`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Factura_Fecha_Empresa`(in empleado_id int, in fecha1 varchar(15), in fecha2 varchar(15), in empresa_id int)
BEGIN
SELECT 
    cabina.descripcion_cabina,
    cliente_empresa.codigo_cliente,
    factura_cabina.factura_id,
    factura_cabina.cant_dia,
    factura_cabina.fecha,
    factura_cabina.impuesto_cabina,
    factura_cabina.precio_total_cabina,
    SUM(factura_cabina.precio_total_cabina) AS total_a_pagar,
    factura_cabina.cabina_cabina_id,
    (SELECT 
            nombre
        FROM
            pct3.colaborador
                INNER JOIN
            pct3.persona ON colaborador.persona_idpersona = persona.idpersona
        WHERE
            empleado_id = empleado_id) AS nombreColaborador,
    factura_cabina.numero_factura,
    factura_cabina.cliente_empresa_empresa_id,
    persona.nombre AS nombre_cliente
FROM
    cabina
        INNER JOIN
    factura_cabina ON cabina.cabina_id = factura_cabina.cabina_cabina_id
        INNER JOIN
    cliente_empresa ON factura_cabina.cliente_empresa_empresa_id = cliente_empresa.empresa_id
        INNER JOIN
    persona ON cliente_empresa.persona_idpersona = persona.idpersona
        INNER JOIN
    colaborador ON factura_cabina.colaborador_empleado_id = colaborador.empleado_id
WHERE
    factura_cabina.fecha BETWEEN CAST(fecha1 AS DATE) AND CAST(fecha2 AS DATE)
        AND factura_cabina.cliente_empresa_empresa_id = empresa_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure Factura_x_Cliente
-- -----------------------------------------------------

USE `pct3`;
DROP procedure IF EXISTS `pct3`.`Factura_x_Cliente`;

DELIMITER $$
USE `pct3`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `Factura_x_Cliente`(in numerofactura int, in idempleado int)
BEGIN
SELECT 
    cabina.descripcion_cabina,
    cliente_empresa.codigo_cliente,
    factura_cabina.factura_id,
    factura_cabina.cant_dia,
    factura_cabina.fecha,
    factura_cabina.impuesto_cabina,
    factura_cabina.precio_total_cabina,
    factura_cabina.cabina_cabina_id,
    (SELECT 
            nombre
        FROM
            pct3.colaborador
                INNER JOIN
            pct3.persona ON colaborador.persona_idpersona = persona.idpersona
        WHERE
            empleado_id = idempleado) AS nombreColaborador,
    factura_cabina.numero_factura,
    factura_cabina.cliente_empresa_empresa_id,
    persona.nombre AS nombre_cliente
FROM
    cabina
        INNER JOIN
    factura_cabina ON cabina.cabina_id = factura_cabina.cabina_cabina_id
        INNER JOIN
    cliente_empresa ON factura_cabina.cliente_empresa_empresa_id = cliente_empresa.empresa_id
        INNER JOIN
    persona ON cliente_empresa.persona_idpersona = persona.idpersona
        INNER JOIN
    colaborador ON factura_cabina.colaborador_empleado_id = colaborador.empleado_id
WHERE
    factura_cabina.numero_factura = numerofactura;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure actualizar_precio_doble
-- -----------------------------------------------------

USE `pct3`;
DROP procedure IF EXISTS `pct3`.`actualizar_precio_doble`;

DELIMITER $$
USE `pct3`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `actualizar_precio_doble`(IN `precio_doble` FLOAT)
BEGIN
UPDATE `cabina` SET `precio`= precio_doble WHERE `tipo_cabina` = 'Doble';

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure actualizar_precio_sencilla
-- -----------------------------------------------------

USE `pct3`;
DROP procedure IF EXISTS `pct3`.`actualizar_precio_sencilla`;

DELIMITER $$
USE `pct3`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `actualizar_precio_sencilla`(IN `precio_doble` FLOAT)
BEGIN
UPDATE `cabina` SET `precio`= precio_doble WHERE `tipo_cabina` = 'Sencilla';

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertar_cabina
-- -----------------------------------------------------

USE `pct3`;
DROP procedure IF EXISTS `pct3`.`insertar_cabina`;

DELIMITER $$
USE `pct3`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertar_cabina`(in descripcionCabina varchar(45), in estado_cabina varchar(45), in precio int, in tipo_cabina varchar(45))
BEGIN
	INSERT INTO `pct3`.`cabina`
(`descripcion_cabina`,
`estado_cabina`,
`precio`,
`tipo_cabina`)
VALUES
(descripcionCabina,
estado_cabina,
precio,
tipo_cabina);
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `pct3`.`cabina`
-- -----------------------------------------------------
START TRANSACTION;
USE `pct3`;
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '1', 'Libre', 10000, 'Sencilla');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '2', 'Libre', 15000, 'Doble');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '3', 'Libre', 10000, 'Sencilla');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '4', 'Libre', 15000, 'Doble');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '5', 'Libre', 10000, 'Sencilla');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '6', 'Libre', 15000, 'Doble');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '7', 'Libre', 10000, 'Sencilla');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '8', 'Libre', 15000, 'Doble');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '9', 'Libre', 10000, 'Sencilla');
INSERT INTO `pct3`.`cabina` (`cabina_id`, `descripcion_cabina`, `estado_cabina`, `precio`, `tipo_cabina`) VALUES (DEFAULT, '10', 'Libre', 15000, 'Doble');

COMMIT;

