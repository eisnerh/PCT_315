/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.conexionDB;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ace
 */
public class statEmpleado extends javax.swing.JFrame {

    /**
     * Creates new form statEmpleado
     */
    private String text = "Estados de los empleados, "
            + "ya sea Activo o Inactivo...";
    //Variables para las conecciones a la base de datos.

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    
    public statEmpleado() {
        initComponents();
        id_empleado.setText(text);
        id_empleado.setVisible(false);
        //inicialización de las variables de la coneccion a la base de datos
        con = conexionDB.conexionDB();
        //llama al procedimiento de obtener la información.
        Get_Data();
        //centra la ventana para que se inicie en el centro del escritorio
        setLocationRelativeTo(null);
    }
    
    private void Get_Data() {

        //Select sobre el estatus_empleado y se le asigna el valor a la columna de la tabla del formulario.
        String sql = "SELECT estado_empleado as 'Estado Empleado' FROM estatus_empleado WHERE 1 ORDER BY estado_empleado";
        
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            tbl_estadoEmpleado.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            
        }
    }
    
    private void Reset() {
        
        txt_stat_emp.setText("");
        btnGuardar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnDelete.setEnabled(false);
        id_empleado.setText(text);
        Get_Data();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_estadoEmpleado = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        id_empleado = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_stat_emp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_estadoEmpleado.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        tbl_estadoEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Estado Empleado"
            }
        ));
        tbl_estadoEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_estadoEmpleadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_estadoEmpleado);

        btnGuardar.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Roboto Black", 0, 12)); // NOI18N
        btnActualizar.setText("Editar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnDelete.setText("Borrar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        id_empleado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        id_empleado.setAutoscrolls(true);
        id_empleado.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Status del Empleado");

        txt_stat_emp.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_stat_emp)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id_empleado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(127, 127, 127)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(btnActualizar)
                        .addGap(74, 74, 74)
                        .addComponent(btnDelete)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(id_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_stat_emp, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnActualizar)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            con = conexionDB.conexionDB();
            if (txt_stat_emp.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Favor ingresa el nuevo estado del empleado", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Statement stmt;
            stmt = con.createStatement();
            //SELECT estado_empleado as 'Estado Empleado' FROM estatus_empleado WHERE 1 ORDER BY estado_empleado
            String sql1 = "SELECT estado_empleado FROM estatus_empleado WHERE estado_empleado= '" + txt_stat_emp.getText() + "'";
            rs = stmt.executeQuery(sql1);
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Estado existente.", "Error", JOptionPane.ERROR_MESSAGE);
                txt_stat_emp.setText("");
                txt_stat_emp.requestDefaultFocus();
                return;
            }
            String sql = "INSERT INTO estatus_empleado(estado_empleado) VALUES ('" + txt_stat_emp.getText() + "')";
            
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Successfully saved", "Doctor Record", JOptionPane.INFORMATION_MESSAGE);
            Reset();
            
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
            
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tbl_estadoEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_estadoEmpleadoMouseClicked
        // TODO add your handling code here:
        try {
            con = conexionDB.conexionDB();
            int row = tbl_estadoEmpleado.getSelectedRow();
            String tabla_click = tbl_estadoEmpleado.getModel().getValueAt(row, 0).toString();
            //SELECT `estado_empleado` FROM `estatus_empleado` WHERE `estado_empleado` = 'Activo'
            String sql = "SELECT `id_estado_empleado`,`estado_empleado` FROM `estatus_empleado` WHERE `estado_empleado` = '" + tabla_click + "'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                String add1 = rs.getString("id_estado_empleado");
                id_empleado.setText(add1);
                String add2 = rs.getString("estado_empleado");
                txt_stat_emp.setText(add2);
                btnGuardar.setEnabled(false);
                btnActualizar.setEnabled(true);
                btnDelete.setEnabled(true);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_tbl_estadoEmpleadoMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        try {
            con = conexionDB.conexionDB();

            //UPDATE `estatus_empleado` SET `estado_empleado`='A' WHERE `estado_empleado` = 'Cualquiera'
            String sql = "UPDATE `estatus_empleado` SET `estado_empleado`='" + txt_stat_emp.getText() + "' WHERE `id_estado_empleado` = '" + id_empleado.getText() + "'";
            
            pst = con.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this, "Successfully updated", "Estado Empleado Record", JOptionPane.INFORMATION_MESSAGE);
            Reset();
            
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int P = JOptionPane.showConfirmDialog(null, " Are you sure want to delete ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (P == 0) {
                con = conexionDB.conexionDB();
                String sql = "DELETE FROM `estatus_empleado` WHERE `id_estado_empleado` =  '" + id_empleado.getText() + "'";
                pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(this, "Successfully deleted", "Record", JOptionPane.INFORMATION_MESSAGE);
                
                Reset();
            }
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(statEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(statEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(statEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(statEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new statEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel id_empleado;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_estadoEmpleado;
    private javax.swing.JTextField txt_stat_emp;
    // End of variables declaration//GEN-END:variables
}
